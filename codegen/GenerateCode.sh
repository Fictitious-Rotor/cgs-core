#!/usr/bin/env bash

# Markers
IMPORTS_MARKER='/* Auto-generated - Imports */'
INSTANTIATION_MARKER='/* Auto-generated - Instantiation */'

# Locations
CORE_PARENT_FOLDER_LOCATION='../src/main/java/org/core/cgs'
FSPM_TEMPLATE_LOCATION="./FSPM-Template.txt"
FOUND_SP_MATERIALS_LOCATION="${CORE_PARENT_FOLDER_LOCATION}/codegen/FoundSubpluginMaterials.java"
SP_FOLDER_LOCATION="${CORE_PARENT_FOLDER_LOCATION}/subplugins"
GENERATED_CODE_LOCATION='./GeneratedCode.txt'

getCommandNames() {
    local folder="$1"

    for commandName in "${folder}"/backends/*; do
        trimmedCommandName="${commandName##*/}"
        printf '%s\n' "${trimmedCommandName%%.java}"
    done
}

getSubPlugins() {
    for dir in "${SP_FOLDER_LOCATION}"/*; do printf '%s\n' "${dir}"; done
}


getClass() {
    local subFolder="$1"
    local subPluginFolder="$2"

    readFolder="${subPluginFolder}/${subFolder}"

    if [[ "$(ls ${readFolder})" ]] ; then
        for class in "${readFolder}"/*; do
            printf '%s;' "${class%%.java}"
        done
    else
        printf '<None>'
    fi
}

#getConfigLocation() {
#    local subPluginFolder="$1"
#
#    printf '%s/Commands.yml\n' "${subPluginFolder}"
#}

readarray -t allSubPlugins<<<"$(getSubPlugins)"

for subPluginLocation in "${allSubPlugins[@]}"; do
    sPName="${subPluginLocation##*/}"
    printf "        // Autogenerated content for: '%s'\n" "${sPName^}"
    printf '%s\n' "$(node ./node/Backends.js ${sPName} $(getClass backends ${subPluginLocation}))"
    printf '%s\n' "$(node ./node/Handlers.js ${sPName} $(getClass metadata/session ${subPluginLocation}) $(getClass metadata/stored ${subPluginLocation}))"
    printf '%s\n' "$(node ./node/Listeners.js ${sPName} $(getClass listeners ${subPluginLocation}))"
    printf '%s\n' "$(node ./node/SubPlugin.js ${sPName})" #$(getConfigLocation ${subPluginLocation})
done > "${GENERATED_CODE_LOCATION}"

node ./CatScript.js "$(cat ${FSPM_TEMPLATE_LOCATION})" "$(cat ${GENERATED_CODE_LOCATION})" > "${FOUND_SP_MATERIALS_LOCATION}"

rm "${GENERATED_CODE_LOCATION}"